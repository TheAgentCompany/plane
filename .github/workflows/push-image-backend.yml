name: Build and Push Backend Docker Image

on:
  push:
    branches:
      - 'develop'
      - 'master'
    tags:
      - '*'

jobs:
  build_push_backend:
    name: Build and Push Api Server Docker Image
    runs-on: ubuntu-20.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3.3.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: linux/arm64,linux/amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          registry: "registry.hub.docker.com"
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker (Docker Hub)
        id: ghmeta
        uses: docker/metadata-action@v4.3.0
        with:
          images: makeplane/plane-backend

      - name: Extract metadata (tags, labels) for Docker (Github)
        id: dkrmeta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ghcr.io/${{ github.repository }}-backend
      
      - name: Get latest release tag
        id: get-latest-tag
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then
            export "RELEASE_TAG=$(curl --silent --header 'Accept: application/vnd.github.v3+json' "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r .tag_name)"
          else
            export "RELEASE_TAG=development"
          fi
          echo "RELEASE_TAG=${RELEASE_TAG#v}" >> $GITHUB_ENV

      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./apiserver
          file: ./apiserver/Dockerfile.api
          platforms: linux/arm64,linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha
          tags: ${{ github.repository }}:${{ env.RELEASE_TAG }}
          labels: ${{ steps.ghmeta.outputs.labels }}

      - name: Build and Push to Docker Hub
        id: build-and-push-image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./apiserver
          file: ./apiserver/Dockerfile.api
          platforms: linux/arm64,linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha
          tags: ${{ github.repository }}:${{ env.RELEASE_TAG }}
          labels: ${{ steps.dkrmeta.outputs.labels }}


