version: "3.8"

services:
  web:
    container_name: web
    platform: linux/amd64
    image: makeplane/plane-frontend:latest
    restart: always
    command: /usr/local/bin/start.sh web/server.js web
    depends_on:
      - api
      - worker

  space:
    container_name: space
    platform: linux/amd64
    image: makeplane/plane-space:latest
    restart: always
    command: /usr/local/bin/start.sh space/server.js space
    depends_on:
      - api
      - worker
      - web

  api:
    container_name: api
    platform: linux/amd64
    image: makeplane/plane-backend:latest
    restart: always
    command: ./bin/takeoff
    depends_on:
      - plane-db
      - plane-redis

  worker:
    container_name: bgworker
    platform: linux/amd64
    image: makeplane/plane-backend:latest
    restart: always
    command: ./bin/worker
    depends_on:
      - api
      - plane-db
      - plane-redis

  beat-worker:
    container_name: beatworker
    platform: linux/amd64
    image: makeplane/plane-backend:latest
    restart: always
    command: ./bin/beat
    depends_on:
      - api
      - plane-db
      - plane-redis

  plane-db:
    container_name: plane-db
    image: postgres:15.2-alpine
    restart: always
    command: postgres -c 'max_connections=1000'
    volumes:
      - pgdata:/var/lib/postgresql/data
    
  plane-redis:
    container_name: plane-redis
    image: redis:6.2.7-alpine
    restart: always
    volumes:
      - redisdata:/data

  plane-minio:
    container_name: plane-minio
    image: minio/minio
    restart: always
    command: server /export --console-address ":9090"
    volumes:
      - uploads:/export

  createbuckets:
    image: minio/mc
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add plane-minio http://plane-minio:9000 \$AWS_ACCESS_KEY_ID \$AWS_SECRET_ACCESS_KEY; /usr/bin/mc mb plane-minio/\$AWS_S3_BUCKET_NAME; /usr/bin/mc anonymous set download plane-minio/\$AWS_S3_BUCKET_NAME; exit 0; "
    depends_on:
      - plane-minio

  # Comment this if you already have a reverse proxy running
  proxy:
    container_name: proxy
    platform: linux/amd64
    image: makeplane/plane-proxy:latest
    ports:
        - ${NGINX_PORT}:80
    depends_on:
      - web
      - api
      - space

volumes:
  pgdata:
  redisdata:
  uploads:
